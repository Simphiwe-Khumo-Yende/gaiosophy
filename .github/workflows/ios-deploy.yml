name: Build and Deploy to TestFlight (Production Ready)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.32.0'
  XCODE_WORKSPACE: 'ios/Runner.xcworkspace'
  XCODE_SCHEME: 'Runner'

jobs:
  build-and-deploy-ios:
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true

    - name: Get App Version from pubspec.yaml
      id: get_version
      run: |
        version_line=$(grep 'version:' pubspec.yaml | xargs)
        full_version=${version_line#*version: }
        version_name=${full_version%+*}
        build_number=${full_version#*+}
        echo "version_name=${version_name}" >> $GITHUB_OUTPUT
        echo "build_number=${build_number}" >> $GITHUB_OUTPUT

    - name: Install Flutter dependencies
      run: flutter pub get

    - name: Run tests
      run: flutter test

    # --- Secure Configuration Setup ---
    - name: Decode and Create GoogleService-Info.plist
      run: |
        echo "Creating GoogleService-Info.plist..."
        echo "${{ secrets.GOOGLE_SERVICE_INFO_PLIST_BASE64 }}" | base64 --decode > "${{ github.workspace }}/ios/Runner/GoogleService-Info.plist"
        echo "âœ… GoogleService-Info.plist created."

    - name: Create App Store Connect API Key file
      run: |
        mkdir -p ~/.appstoreconnect/private_keys/
        echo '${{ secrets.APPSTORE_PRIVATE_KEY }}' > ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.APPSTORE_KEY_ID }}.p8

    # --- Build Preparation ---
    - name: Setup CocoaPods Cache
      uses: actions/cache@v4
      with:
        path: ./ios/Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - name: Install iOS Dependencies
      run: |
        cd ios
        pod install --repo-update
        cd ..

    - name: Create ExportOptions.plist
      run: |
        cat > ios/ExportOptions.plist <<EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>app-store</string>
            <key>teamID</key>
            <string>${{ secrets.APPLE_TEAM_ID }}</string>
            <key>uploadSymbols</key>
            <true/>
            <key>uploadBitcode</key>
            <false/>
            <key>signingStyle</key>
            <string>automatic</string>
        </dict>
        </plist>
        EOF

    # --- Build, Archive, and Upload ---
    - name: Build and Archive
      run: |
        xcodebuild -workspace ${{ env.XCODE_WORKSPACE }} \
          -scheme ${{ env.XCODE_SCHEME }} \
          -configuration Release \
          -destination 'generic/platform=iOS' \
          -archivePath "$GITHUB_WORKSPACE/build/Runner.xcarchive" \
          -allowProvisioningUpdates \
          FLUTTER_BUILD_NAME=${{ steps.get_version.outputs.version_name }} \
          FLUTTER_BUILD_NUMBER=${{ steps.get_version.outputs.build_number }} \
          DEVELOPMENT_TEAM=${{ secrets.APPLE_TEAM_ID }} \
          CODE_SIGN_STYLE=Automatic \
          archive | xcpretty

    - name: Export IPA
      run: |
        xcodebuild -exportArchive \
          -archivePath "$GITHUB_WORKSPACE/build/Runner.xcarchive" \
          -exportPath "$GITHUB_WORKSPACE/build/ios/ipa" \
          -exportOptionsPlist ios/ExportOptions.plist

    - name: Upload to TestFlight
      run: |
        xcrun altool --upload-app \
          -t ios \
          -f "$GITHUB_WORKSPACE/build/ios/ipa/Runner.ipa" \
          -k ${{ secrets.APPSTORE_KEY_ID }} \
          -i ${{ secrets.APPSTORE_ISSUER_ID }}

    # --- Post-Build Steps ---
    - name: Upload IPA Artifact for Records
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: runner-ipa
        path: "$GITHUB_WORKSPACE/build/ios/ipa/Runner.ipa"
        retention-days: 7

    - name: Clean up API key
      if: always()
      run: |
        rm -f ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.APPSTORE_KEY_ID }}.p8
