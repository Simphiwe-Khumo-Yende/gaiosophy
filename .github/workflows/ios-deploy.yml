name: Build and Deploy to TestFlight (Cloud Signing)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.32.0'

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Run tests
      run: flutter test
      continue-on-error: true
      
    - name: Create App Store Connect API Key
      env:
        APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
        APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
        APP_STORE_CONNECT_API_KEY_KEY: ${{ secrets.APPSTORE_PRIVATE_KEY }}
      run: |
        mkdir -p ~/private_keys
        echo -n "$APP_STORE_CONNECT_API_KEY_KEY" > ~/private_keys/AuthKey_${APP_STORE_CONNECT_API_KEY_KEY_ID}.p8
        
    - name: Create ExportOptions.plist
      run: |
        cat > ios/ExportOptions.plist <<EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
          <key>destination</key>
          <string>export</string>
          <key>method</key>
          <string>app-store-connect</string>
          <key>signingStyle</key>
          <string>automatic</string>
          <key>generateAppStoreInformation</key>
          <true/>
          <key>stripSwiftSymbols</key>
          <true/>
          <key>teamID</key>
          <string>Z9WJ3V7JV3</string>
          <key>uploadSymbols</key>
          <true/>
          <key>provisioningProfiles</key>
          <dict>
            <key>com.gaiosophy.app</key>
            <string>Automatic</string>
          </dict>
        </dict>
        </plist>
        EOF
        
    - name: Build Flutter iOS (generates config files)
      run: flutter build ios --release --no-codesign
        
    - name: Create temporary keychain
      run: |
        security create-keychain -p "" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security set-keychain-settings -lut 7200 build.keychain
        
    - name: Build and Archive with Cloud Signing
      env:
        APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
        APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
      run: |
        cd ios
        
        xcodebuild clean archive \
          -workspace Runner.xcworkspace \
          -scheme Runner \
          -configuration Release \
          -archivePath ../build/Runner.xcarchive \
          -destination "generic/platform=iOS" \
          -authenticationKeyPath ~/private_keys/AuthKey_${APP_STORE_CONNECT_API_KEY_KEY_ID}.p8 \
          -authenticationKeyID ${APP_STORE_CONNECT_API_KEY_KEY_ID} \
          -authenticationKeyIssuerID ${APP_STORE_CONNECT_API_KEY_ISSUER_ID} \
          DEVELOPMENT_TEAM=Z9WJ3V7JV3 \
          -allowProvisioningUpdates \
          | xcpretty --simple --color
          
    - name: Export IPA
      env:
        APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
        APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
      run: |
        xcodebuild -exportArchive \
          -archivePath build/Runner.xcarchive \
          -exportPath build \
          -exportOptionsPlist ios/ExportOptions.plist \
          -authenticationKeyPath ~/private_keys/AuthKey_${APP_STORE_CONNECT_API_KEY_KEY_ID}.p8 \
          -authenticationKeyID ${APP_STORE_CONNECT_API_KEY_KEY_ID} \
          -authenticationKeyIssuerID ${APP_STORE_CONNECT_API_KEY_ISSUER_ID} \
          -allowProvisioningUpdates
          
    - name: Upload to TestFlight
      env:
        APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APPSTORE_KEY_ID }}
        APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
      run: |
        echo "Uploading IPA to TestFlight..."
        xcrun altool --upload-app \
          --type ios \
          --file build/Runner.ipa \
          --apiKey ${APP_STORE_CONNECT_API_KEY_KEY_ID} \
          --apiIssuer ${APP_STORE_CONNECT_API_KEY_ISSUER_ID} \
          --verbose
          
    - name: Upload build artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ios-build-artifacts
        path: |
          build/Runner.ipa
          build/Runner.xcarchive
          
    - name: Build Summary
      if: success()
      run: |
        echo "## ðŸŽ‰ Build Successful!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Build Details:" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Flutter iOS build completed" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Signed with App Store Connect cloud signing" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… IPA uploaded to TestFlight" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "1. Check [App Store Connect](https://appstoreconnect.apple.com) for your build" >> $GITHUB_STEP_SUMMARY
        echo "2. Wait for processing (typically 10-30 minutes)" >> $GITHUB_STEP_SUMMARY
        echo "3. Once processed, distribute to testers" >> $GITHUB_STEP_SUMMARY
          
    - name: Clean up
      if: always()
      run: |
        rm -rf ~/private_keys
        security delete-keychain build.keychain || true